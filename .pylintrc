[MAIN]
# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
init-hook='import sys; sys.path.append(".")'

# Use multiple processes to speed up Pylint.
jobs=1

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode=yes

[MESSAGES CONTROL]
# Disable the message, report, category or checker with the given id(s).
disable=
    # Import-related (handled by other tools)
    import-error,
    wrong-import-order,
    
    # Docstring requirements (we have good docstrings where needed)
    missing-module-docstring,
    missing-function-docstring,
    missing-class-docstring,
    
    # Style preferences
    invalid-name,
    
    # Complexity warnings that are reasonable for MCP servers
    too-few-public-methods,
    
    # Logging format strings (we use f-strings intentionally)
    logging-fstring-interpolation,
    
    # Duplicate code (some duplication is acceptable)
    duplicate-code,
    
    # MCP server specific - these are common in protocol implementations
    too-many-positional-arguments,
    unused-argument,
    
    # Development/testing specific
    no-member,
    assignment-from-none,
    no-value-for-parameter,
    too-many-function-args,
    
    # Code style preferences that are acceptable
    broad-exception-caught

[DESIGN]
# MCP servers often need many configuration parameters and instance attributes
max-args=10
max-locals=20
max-returns=10
max-branches=15
max-statements=60
max-parents=10
max-attributes=15
min-public-methods=1
max-public-methods=25

[BASIC]
# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,40}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,40}$

# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,ok,db,app

[FORMAT]
# Maximum number of characters on a single line.
max-line-length=100

# Maximum number of lines in a module
max-module-lines=1200

[SIMILARITIES]
# Minimum lines number of a similarity.
min-similarity-lines=6

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no

[TYPECHECK]
# List of class names for which member attributes should not be checked
ignored-classes=SQLObject,optparse.Values,thread._local,_thread._local

# List of module names for which member attributes should not be checked
ignored-modules=

[VARIABLES]
# Tells whether we should check for unused import in __init__ files.
init-import=no

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught.
overgeneral-exceptions=builtins.Exception
